        /// <summary>
        /// Convert object to JSON string
        /// </summary>
        public string ToJson()
        {
            var builder = new StringBuilder();
            using(var writer = new StringWriter(builder))
            {
                IncludeJson(writer);
                return builder.ToString();
            }
        }

        /// <summary>
        /// Include this class in a JSON string
        /// </summary>
        public void IncludeJson(TextWriter writer)
        {
            writer.Write('{');

            writer.Write("\"FixedSize\":");
            FixedSize.IncludeJson(writer);
    
            writer.Write(",\"FlexSize\":");
            FlexSize.IncludeJson(writer);
    
            writer.Write(",\"FixCollection\":");
            if (FixCollection == null)
            {
                writer.Write("null");
            }
            else
            {
                writer.Write('[');
                foreach (var value in FixCollection)
                {
            		value.IncludeJson(writer);
                    writer.Write(',');
                }
                writer.Write(']');
            }
    
            writer.Write(",\"FlexCollection\":");
            if (FlexCollection == null)
            {
                writer.Write("null");
            }
            else
            {
                writer.Write('[');
                foreach (var value in FlexCollection)
                {
            		value.IncludeJson(writer);
                    writer.Write(',');
                }
                writer.Write(']');
            }
    
            writer.Write('}');
        }

        /// <summary>
        /// Convert object to JSON string
        /// </summary>
        public Dummy FromJson(string json)
        {
            using (var reader = new JsonTextReader(new StringReader(json)))
            {
                return FromJson(reader);
            }
        }

        /// <summary>
        /// Include this class in a JSON string
        /// </summary>
        public Dummy FromJson(JsonReader reader)
        {
            while (reader.Read())
            {
                // Break on EndObject
                if (reader.TokenType == JsonToken.EndObject)
                    break;

                // Only look for properties
                if (reader.TokenType != JsonToken.PropertyName)
                    continue;

                switch ((string) reader.Value)
                {
                    case "FixedSize":
                        reader.Read();
                        FixedSize = new FixedClass().FromJson(reader);
                        break;

                    case "FlexSize":
                        reader.Read();
                        FlexSize = new FlexClass().FromJson(reader);
                        break;

                    case "FixCollection":
                        reader.Read(); // Read token where array should begin
                        if (reader.TokenType == JsonToken.Null)
                            break;
                        var fixcollection = new List<FixedClass>();
                        while (reader.Read() && reader.TokenType == JsonToken.StartObject)
                            fixcollection.Add(new FixedClass().FromJson(reader));
                        FixCollection = fixcollection;
                        break;

                    case "FlexCollection":
                        reader.Read(); // Read token where array should begin
                        if (reader.TokenType == JsonToken.Null)
                            break;
                        var flexcollection = new List<FlexClass>();
                        while (reader.Read() && reader.TokenType == JsonToken.StartObject)
                            flexcollection.Add(new FlexClass().FromJson(reader));
                        FlexCollection = flexcollection.ToArray();
                        break;

                }
            }

            return this;
        }
